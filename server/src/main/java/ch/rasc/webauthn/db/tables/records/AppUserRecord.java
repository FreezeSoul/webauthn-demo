/*
 * This file is generated by jOOQ.
 */
package ch.rasc.webauthn.db.tables.records;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import ch.rasc.webauthn.db.tables.AppUser;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AppUserRecord extends UpdatableRecordImpl<AppUserRecord>
    implements Record6<Long, String, byte[], LocalDateTime, LocalDateTime, byte[]> {

  private static final long serialVersionUID = 1L;

  /**
   * Setter for <code>APP_USER.ID</code>.
   */
  public void setId(Long value) {
    set(0, value);
  }

  /**
   * Getter for <code>APP_USER.ID</code>.
   */
  public Long getId() {
    return (Long) get(0);
  }

  /**
   * Setter for <code>APP_USER.USERNAME</code>.
   */
  public void setUsername(String value) {
    set(1, value);
  }

  /**
   * Getter for <code>APP_USER.USERNAME</code>.
   */
  public String getUsername() {
    return (String) get(1);
  }

  /**
   * Setter for <code>APP_USER.RECOVERY_TOKEN</code>.
   */
  public void setRecoveryToken(byte[] value) {
    set(2, value);
  }

  /**
   * Getter for <code>APP_USER.RECOVERY_TOKEN</code>.
   */
  public byte[] getRecoveryToken() {
    return (byte[]) get(2);
  }

  /**
   * Setter for <code>APP_USER.REGISTRATION_START</code>.
   */
  public void setRegistrationStart(LocalDateTime value) {
    set(3, value);
  }

  /**
   * Getter for <code>APP_USER.REGISTRATION_START</code>.
   */
  public LocalDateTime getRegistrationStart() {
    return (LocalDateTime) get(3);
  }

  /**
   * Setter for <code>APP_USER.REGISTRATION_ADD_START</code>.
   */
  public void setRegistrationAddStart(LocalDateTime value) {
    set(4, value);
  }

  /**
   * Getter for <code>APP_USER.REGISTRATION_ADD_START</code>.
   */
  public LocalDateTime getRegistrationAddStart() {
    return (LocalDateTime) get(4);
  }

  /**
   * Setter for <code>APP_USER.REGISTRATION_ADD_TOKEN</code>.
   */
  public void setRegistrationAddToken(byte[] value) {
    set(5, value);
  }

  /**
   * Getter for <code>APP_USER.REGISTRATION_ADD_TOKEN</code>.
   */
  public byte[] getRegistrationAddToken() {
    return (byte[]) get(5);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<Long> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record6 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row6<Long, String, byte[], LocalDateTime, LocalDateTime, byte[]> fieldsRow() {
    return (Row6) super.fieldsRow();
  }

  @Override
  public Row6<Long, String, byte[], LocalDateTime, LocalDateTime, byte[]> valuesRow() {
    return (Row6) super.valuesRow();
  }

  @Override
  public Field<Long> field1() {
    return AppUser.APP_USER.ID;
  }

  @Override
  public Field<String> field2() {
    return AppUser.APP_USER.USERNAME;
  }

  @Override
  public Field<byte[]> field3() {
    return AppUser.APP_USER.RECOVERY_TOKEN;
  }

  @Override
  public Field<LocalDateTime> field4() {
    return AppUser.APP_USER.REGISTRATION_START;
  }

  @Override
  public Field<LocalDateTime> field5() {
    return AppUser.APP_USER.REGISTRATION_ADD_START;
  }

  @Override
  public Field<byte[]> field6() {
    return AppUser.APP_USER.REGISTRATION_ADD_TOKEN;
  }

  @Override
  public Long component1() {
    return getId();
  }

  @Override
  public String component2() {
    return getUsername();
  }

  @Override
  public byte[] component3() {
    return getRecoveryToken();
  }

  @Override
  public LocalDateTime component4() {
    return getRegistrationStart();
  }

  @Override
  public LocalDateTime component5() {
    return getRegistrationAddStart();
  }

  @Override
  public byte[] component6() {
    return getRegistrationAddToken();
  }

  @Override
  public Long value1() {
    return getId();
  }

  @Override
  public String value2() {
    return getUsername();
  }

  @Override
  public byte[] value3() {
    return getRecoveryToken();
  }

  @Override
  public LocalDateTime value4() {
    return getRegistrationStart();
  }

  @Override
  public LocalDateTime value5() {
    return getRegistrationAddStart();
  }

  @Override
  public byte[] value6() {
    return getRegistrationAddToken();
  }

  @Override
  public AppUserRecord value1(Long value) {
    setId(value);
    return this;
  }

  @Override
  public AppUserRecord value2(String value) {
    setUsername(value);
    return this;
  }

  @Override
  public AppUserRecord value3(byte[] value) {
    setRecoveryToken(value);
    return this;
  }

  @Override
  public AppUserRecord value4(LocalDateTime value) {
    setRegistrationStart(value);
    return this;
  }

  @Override
  public AppUserRecord value5(LocalDateTime value) {
    setRegistrationAddStart(value);
    return this;
  }

  @Override
  public AppUserRecord value6(byte[] value) {
    setRegistrationAddToken(value);
    return this;
  }

  @Override
  public AppUserRecord values(Long value1, String value2, byte[] value3,
      LocalDateTime value4, LocalDateTime value5, byte[] value6) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    value5(value5);
    value6(value6);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * Create a detached AppUserRecord
   */
  public AppUserRecord() {
    super(AppUser.APP_USER);
  }

  /**
   * Create a detached, initialised AppUserRecord
   */
  public AppUserRecord(Long id, String username, byte[] recoveryToken,
      LocalDateTime registrationStart, LocalDateTime registrationAddStart,
      byte[] registrationAddToken) {
    super(AppUser.APP_USER);

    setId(id);
    setUsername(username);
    setRecoveryToken(recoveryToken);
    setRegistrationStart(registrationStart);
    setRegistrationAddStart(registrationAddStart);
    setRegistrationAddToken(registrationAddToken);
  }
}
